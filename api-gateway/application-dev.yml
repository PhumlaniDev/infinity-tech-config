server:
  port: 8085

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeader: "*"
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - StripPrefix=1
            - RemoveRequestHeader=Cookie
            - RemoveRequestHeader=Authorization

        # ‚úÖ Public GETs
        - id: product-service-public
          uri: lb://product-service
          predicates:
            - Method=GET
            - Path=/api/v1/products/**
          filters:
            - StripPrefix=1
            - RemoveRequestHeader=Authorization
            - RemoveRequestHeader=Cookie

        # üîê Secured write routes
        - id: product-service-secured
          uri: lb://product-service
          predicates:
            - Method=POST,PUT,PATCH,DELETE
            - Path=/api/v1/products/**
          filters:
            - StripPrefix=1
            - RoleHeaderFilter
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenish-rate: 10
            redis-rate-limiter.burst-capacity: 20
            redis-rate-limiter.requestedTokens: 1
        - AddResponseHeader=X-Gateway-Response, Passed-through-API-Gateway
        - AddRequestHeader=X-Response-Time, ${#t(java.time.Instant).now().toString()}
    config:
      uri: http://localhost:8888

  security:
    oauth2:
      client:
        registration:
          tech-hive-store:
            client-id: tech-hive-store
            client-secret: "{cipher}58f2bf1671e81d93a39977f8a2ce7c0c74c95d690b297f1bddb3941e8285e76df9474d97e284c76b860f98730e16ac4ff46ec974205d08aedb04ced98468a0e8"
            scope: openid
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          tech-hive-store:
            issuer-uri: http://localhost:8080/realms/mac-apps
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/mac-apps
          jwk-set-uri: http://localhost:8080/realms/mac-apps/protocol/openid-connect/certs

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.cloud.gateway: DEBUG