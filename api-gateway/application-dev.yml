server:
  port: 8085

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
#      globalcors:
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: "http://localhost:3000"
#            allowedMethods:
#              - GET
#              - POST
#              - PUT
#              - DELETE
#              - OPTIONS
#            allowedHeader: "*"
#      discovery:
#        locator:
#          enabled: true
#          lower-case-service-id: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - StripPrefix=1

        # ‚úÖ Public GETs
        - id: product-service-public
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/all
          filters:
            - StripPrefix=1

        # üîê Secured write routes
        - id: product-service-secured
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/**
          filters:
            - StripPrefix=1
          metadata:
            requiresRole: ROLE_admin
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenish-rate: 10
            redis-rate-limiter.burst-capacity: 20
            redis-rate-limiter.requestedTokens: 1
        - AddResponseHeader=X-Gateway-Response, Passed-through-API-Gateway
        - AddRequestHeader=X-Response-Time, ${#t(java.time.Instant).now().toString()}
    config:
      uri: http://localhost:8888

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/mac-apps

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.cloud.gateway: DEBUG