server:
  port: 9000

spring:
  application:
    name: auth-service
  config:
    activate:
      on-profile: dev
  credentials:
    keycloak-secret: "${cipher}781d21de88954c53870db242aa9dbca7f5c5693a5a952673108d1021ecaac567290632af392bfb927db804cfbac416872413fc8e168ce71dfc9aefc757d401eb"
    keycloak-admin-username: "${cipher}e4873f662f01f5713bfa82568aedefcf3d85246f5dd6bd8add81e56a49d491a4"
    keycloak-admin-password: "${cipher}bf731f3c48b46f9f1058a6709a3362980aa96d79e2e4e5e4dd340b80a95a3fce"
  datasource:
    url: jdbc:postgresql://localhost:5432/authdb
    username: "{cipher}c2eab371aecf1a3738e2639fada53e043866cf226200ff712a557916b6d70e12"
    password: "{cipher}c2eab371aecf1a3738e2639fada53e043866cf226200ff712a557916b6d70e12"
  jpa:
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

keycloak:
  auth-server-url: http://localhost:8080
  realm: mac-apps
  resource: tech-hive-store
  principle-attribute: preferred_username

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always