server:
  port: 9000

spring:
  application:
    name: auth-service
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/authdb
    username: "{cipher}70d245b37109f04467ea8326a597e474eccf57adceb802f0d6ae2d678e774cf9"
    password: "{cipher}70d245b37109f04467ea8326a597e474eccf57adceb802f0d6ae2d678e774cf9"
  jpa:
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

keycloak:
  auth-server-url: http://localhost:8080
  realm: mac-apps
  resource: tech-hive-store
  principle-attribute: preferred_username
  credentials:
    secret: "${cipher}c13c1e8686cca3a02c118c5630c5aeb2a2fe6741cbe613354db72e8851baa62bb4a8c5098dc351dbd73c5da6d956415a23dbe0bd894f776a5735df8b4dc1d5cf"
  admin:
    username: "${cipher}de943e098b6f1e481aa10bfea1c0c8b27713d4747ad8254bd973e6ea7fe80c86"
    password: "${cipher}ab2207ed18d57e2a9a9043e0367b5c0dc25acda1c327bb026747cd787d00ab23"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always