server:
  port: 9000

spring:
  application:
    name: auth-service
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/authdb
    username: "{cipher}276ad83eab466b04476415aeab00295f53776b0ab251f6b086d9a9d8eebb25b"
    password: "{cipher}276ad83eab466b04476415aeab00295f53776b0ab251f6b086d9a9d8eebb25b"
  jpa:
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

keycloak:
  auth-server-url: http://localhost:8080
  realm: mac-apps
  resource: tech-hive-store
  principle-attribute: preferred_username
  credentials:
    secret: "${cipher}16d2c790db842261e99646a0ba019ab8d4f2c16934d4f34eac0c86f68edec17c86d5e323c60ace3ee5f71bc49f4aae20eacbc89ca4ebc26591103dd7615846d8"
  admin:
    username: "${cipher}4240bd962ecc20ac1270d9abfaefb6178ea95575c8546df44ddc9b157147de82"
    password: "${cipher}c93aa281f5c51001eb4630606f4175fcf12799d53c198a7625aff1aaf74fee25"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always