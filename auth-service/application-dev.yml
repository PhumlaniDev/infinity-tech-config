server:
  port: 9500

spring:
  application:
    name: auth-service
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/authdb
    username: "{cipher}db741a80ad9c0b7b4aa57bd3ab79572e586e04033acb12358f6ef179077db680"
    password: "{cipher}db741a80ad9c0b7b4aa57bd3ab79572e586e04033acb12358f6ef179077db680"
  jpa:
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

keycloak:
  auth-server-url: http://localhost:8080
  realm: mac-apps
  resource: tech-hive-store
  principle-attribute: preferred_username
  credentials:
    secret: "{cipher}58f2bf1671e81d93a39977f8a2ce7c0c74c95d690b297f1bddb3941e8285e76df9474d97e284c76b860f98730e16ac4ff46ec974205d08aedb04ced98468a0e8"
  admin:
    username: "{cipher}6700290e43350038607a958754d6dc54a5a13b213edbca43258e2947df146784"
    password: "{cipher}1237e2ea33634a020ea9d527e65c3574bfe1bc277e5e19dc4bdb991d9169a6c7"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always