server:
  port: 9400

spring:
  application:
    name: product-service
  config:
    activate:
      on-profile: docker
  cloud:
    stream:
      bindings:
        productCreated-out-0:
          destination: product.created.queue
          content-type: application/json
      rabbit:
        bindings:
          productCreated-out-0:
            producer:
              exchange-type: fanout
  cache:
    type: redis
  datasource:
    url: jdbc:postgresql://postgres-product:5432/productdb
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5       # Keep low to avoid exhausting local DB connections
      minimum-idle: 2            # Few idle connections are enough
      idle-timeout: 30000        # 30 sec before closing idle connections
      max-lifetime: 1800000      # 30 minutes
      connection-timeout: 10000  # 10 seconds max wait for a connection
      pool-name: DevHikariCP
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  redis:
    host: redis
    port: 6379
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/ecommerce
          jwk-uri: http://keycloak:8080/realms/ecommerce/protocol/openid-connect/certs

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka

keycloak:
  auth-server-url: http://keycloak:8080
  realm: ecommerce
  resource: product-service
  principle-attribute: preferred_username
  credentials:
    secret: "{cipher}3e37d4304a498a364ea49b377d0e4bf6e0c04a0df67e9e33f6144b2556b32414f1a9d52a9fc5a78853a623e0445f7ab809b3786149975c7836f6f88333f20607"
  admin:
    username: "{cipher}1b1605dd29d70df25c643ed64a28779456c1453c2252432b3a77e77ae35935d0"
    password: "{cipher}9691f299e5d13785d56be58db20a811fbea1b1b8469c6d0b7dfb2040be6eac09"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    com.phumlanidev.productservice: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.http.converter.json: DEBUG
    org.springframework.validation: DEBUG



